TFSOLO.BalancingFuncs.push(function(kv)
{
	// Bootlegger
	local key1 = kv.FindKey("items")
	local prefab = key1.FindKey("608")
	local attrib = prefab.GetKey("attributes", true)
	// Match booties prefab
	prefab.SetString("prefab","")
	prefab.SetString("enabled","1")
	prefab.SetString("item_class","tf_wearable")
	prefab.SetString("craft_class","weapon")
	prefab.SetString("craft_material_type","weapon")
	prefab.SetString("item_type_name","#TF_Wearable_Boots")
	prefab.SetString("base_item_name","The Bootlegger")
	prefab.SetString("item_slot","primary")
	prefab.SetString("equip_region","feet")
	prefab.SetString("anim_slot","FORCE_NOT_USED")
	prefab.SetString("item_quality","unique")
	prefab.SetString("act_as_wearable","1")
	prefab.SetString("drop_type","none")
	prefab.SetString("mouse_pressed_sound","ui/item_hat_pickup.wav")
	prefab.SetString("drop_sound","ui/item_hat_drop.wav")
	local capable = prefab.GetKey("capabilities", true)
	capable.SetString("nameable","1")
	capable.SetString("can_craft_count","1")
	local usable = prefab.GetKey("used_by_classes", true)
	usable.SetString("demoman","1")
	local visuals = prefab.GetKey("visuals", true)
	local bodygroups = visuals.GetKey("player_bodygroups", true)
	bodygroups.SetString("shoes","1")
	local a1 = attrib.GetKey("allowed in medieval mode", true)
	a1.SetString("attribute_class","allowed_in_medieval_mode")
	a1.SetInt("value", 1)
	// Add stick to walls
	local a2 = attrib.GetKey("stick_to_walls", true)
	a2.SetString("attribute_class","stick_to_walls")
	a2.SetInt("value", 1)
	// Add no fall damage
	local a3 = attrib.GetKey("cancel falling damage", true)
	a3.SetString("attribute_class","cancel_falling_damage")
	a3.SetInt("value", 1)
	// Add +30 health
	local a3 = attrib.GetKey("max health additive bonus", true)
	a3.SetString("attribute_class","add_maxhealth")
	a3.SetInt("value", 30)
	
})